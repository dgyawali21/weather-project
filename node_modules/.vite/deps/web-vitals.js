import "./chunk-CEQRFMJQ.js";

// node_modules/web-vitals/dist/web-vitals.es5.min.js
var t;
var n;
var e = function() {
  return "".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12);
};
var i = function(t2) {
  var n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;
  return { name: t2, value: n2, delta: 0, entries: [], id: e(), isFinal: false };
};
var a = function(t2, n2) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(t2)) {
      var e2 = new PerformanceObserver(function(t3) {
        return t3.getEntries().map(n2);
      });
      return e2.observe({ type: t2, buffered: true }), e2;
    }
  } catch (t3) {
  }
};
var r = false;
var o = false;
var s = function(t2) {
  r = !t2.persisted;
};
var u = function() {
  addEventListener("pagehide", s), addEventListener("beforeunload", function() {
  });
};
var c = function(t2) {
  var n2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
  o || (u(), o = true), addEventListener("visibilitychange", function(n3) {
    var e2 = n3.timeStamp;
    "hidden" === document.visibilityState && t2({ timeStamp: e2, isUnloading: r });
  }, { capture: true, once: n2 });
};
var l = function(t2, n2, e2, i2) {
  var a2;
  return function() {
    e2 && n2.isFinal && e2.disconnect(), n2.value >= 0 && (i2 || n2.isFinal || "hidden" === document.visibilityState) && (n2.delta = n2.value - (a2 || 0), (n2.delta || n2.isFinal || void 0 === a2) && (t2(n2), a2 = n2.value));
  };
};
var p = function(t2) {
  var n2, e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r2 = i("CLS", 0), o2 = function(t3) {
    t3.hadRecentInput || (r2.value += t3.value, r2.entries.push(t3), n2());
  }, s2 = a("layout-shift", o2);
  s2 && (n2 = l(t2, r2, s2, e2), c(function(t3) {
    var e3 = t3.isUnloading;
    s2.takeRecords().map(o2), e3 && (r2.isFinal = true), n2();
  }));
};
var d = function() {
  return void 0 === t && (t = "hidden" === document.visibilityState ? 0 : 1 / 0, c(function(n2) {
    var e2 = n2.timeStamp;
    return t = e2;
  }, true)), { get timeStamp() {
    return t;
  } };
};
var v = function(t2) {
  var n2, e2 = i("FCP"), r2 = d(), o2 = a("paint", function(t3) {
    "first-contentful-paint" === t3.name && t3.startTime < r2.timeStamp && (e2.value = t3.startTime, e2.isFinal = true, e2.entries.push(t3), n2());
  });
  o2 && (n2 = l(t2, e2, o2));
};
var f = function(t2) {
  var n2 = i("FID"), e2 = d(), r2 = function(t3) {
    t3.startTime < e2.timeStamp && (n2.value = t3.processingStart - t3.startTime, n2.entries.push(t3), n2.isFinal = true, s2());
  }, o2 = a("first-input", r2), s2 = l(t2, n2, o2);
  o2 ? c(function() {
    o2.takeRecords().map(r2), o2.disconnect();
  }, true) : window.perfMetrics && window.perfMetrics.onFirstInputDelay && window.perfMetrics.onFirstInputDelay(function(t3, i2) {
    i2.timeStamp < e2.timeStamp && (n2.value = t3, n2.isFinal = true, n2.entries = [{ entryType: "first-input", name: i2.type, target: i2.target, cancelable: i2.cancelable, startTime: i2.timeStamp, processingStart: i2.timeStamp + t3 }], s2());
  });
};
var m = function() {
  return n || (n = new Promise(function(t2) {
    return ["scroll", "keydown", "pointerdown"].map(function(n2) {
      addEventListener(n2, t2, { once: true, passive: true, capture: true });
    });
  })), n;
};
var g = function(t2) {
  var n2, e2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r2 = i("LCP"), o2 = d(), s2 = function(t3) {
    var e3 = t3.startTime;
    e3 < o2.timeStamp ? (r2.value = e3, r2.entries.push(t3)) : r2.isFinal = true, n2();
  }, u2 = a("largest-contentful-paint", s2);
  if (u2) {
    n2 = l(t2, r2, u2, e2);
    var p2 = function() {
      r2.isFinal || (u2.takeRecords().map(s2), r2.isFinal = true, n2());
    };
    m().then(p2), c(p2, true);
  }
};
var h = function(t2) {
  var n2, e2 = i("TTFB");
  n2 = function() {
    try {
      var n3 = performance.getEntriesByType("navigation")[0] || function() {
        var t3 = performance.timing, n4 = { entryType: "navigation", startTime: 0 };
        for (var e3 in t3)
          "navigationStart" !== e3 && "toJSON" !== e3 && (n4[e3] = Math.max(t3[e3] - t3.navigationStart, 0));
        return n4;
      }();
      e2.value = e2.delta = n3.responseStart, e2.entries = [n3], e2.isFinal = true, t2(e2);
    } catch (t3) {
    }
  }, "complete" === document.readyState ? setTimeout(n2, 0) : addEventListener("pageshow", n2);
};
export {
  p as getCLS,
  v as getFCP,
  f as getFID,
  g as getLCP,
  h as getTTFB
};
//# sourceMappingURL=web-vitals.js.map
